// file: SimpleJADEAbstractOntologyOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package ontology;

import jade.content.onto.*;
import jade.content.schema.*;

/** file: SimpleJADEAbstractOntologyOntology.java
 * @author OntologyBeanGenerator v4.1
 * @version 2021/12/22, 21:35:39
 */
public class SimpleJADEAbstractOntologyOntology extends jade.content.onto.Ontology  {

  private static final long serialVersionUID = -6333048189015439719L;

  //NAME
  public static final String ONTOLOGY_NAME = "SimpleJADEAbstractOntology";
  // The singleton instance of this ontology
  private static Ontology theInstance = new SimpleJADEAbstractOntologyOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String SUBASTAR_SUBASTA="subasta";
    public static final String SUBASTAR="Subastar";
    public static final String RESPONDER_RESPUESTA="respuesta";
    public static final String RESPONDER="Responder";
    public static final String SUBASTA_PRECIO="precio";
    public static final String SUBASTA_TITULO="titulo";
    public static final String SUBASTA="Subasta";
    public static final String RESPUESTA_INTERESADO="interesado";
    public static final String RESPUESTA="Respuesta";

  /**
   * Constructor
  */
  private SimpleJADEAbstractOntologyOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema respuestaSchema = new ConceptSchema(RESPUESTA);
    add(respuestaSchema, DefaultRespuesta.class);
    ConceptSchema subastaSchema = new ConceptSchema(SUBASTA);
    add(subastaSchema, ontology.DefaultSubasta.class);

    // adding AgentAction(s)
    AgentActionSchema responderSchema = new AgentActionSchema(RESPONDER);
    add(responderSchema, ontology.DefaultResponder.class);
    AgentActionSchema subastarSchema = new AgentActionSchema(SUBASTAR);
    add(subastarSchema, ontology.DefaultSubastar.class);

    // adding AID(s)

    // adding Predicate(s)


    // adding fields
    respuestaSchema.add(RESPUESTA_INTERESADO, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.OPTIONAL);
    subastaSchema.add(SUBASTA_TITULO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    subastaSchema.add(SUBASTA_PRECIO, (TermSchema)getSchema(BasicOntology.FLOAT), ObjectSchema.OPTIONAL);
    responderSchema.add(RESPONDER_RESPUESTA, respuestaSchema, ObjectSchema.OPTIONAL);
    subastarSchema.add(SUBASTAR_SUBASTA, subastaSchema, ObjectSchema.OPTIONAL);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
}
